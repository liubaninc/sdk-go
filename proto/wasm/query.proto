syntax = "proto3";
package liubaninc.m1.wasm;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "wasm/contract_code.proto";
import "wasm/base_ext.proto";
import "wasm/contract.proto";

option go_package = "github.com/liubaninc/sdk-go/modules/wasm/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2

	// Queries a contractCode by index.
	rpc ContractCode(QueryGetContractCodeRequest) returns (QueryGetContractCodeResponse) {
		option (google.api.http).get = "/liubaninc/m1/wasm/contractCode/{hash}";
	}

	// Queries a list of contractCode items.
	rpc ContractCodeAll(QueryAllContractCodeRequest) returns (QueryAllContractCodeResponse) {
		option (google.api.http).get = "/liubaninc/m1/wasm/contractCode";
	}


	// Queries a contract by index.
	rpc Contract(QueryGetContractRequest) returns (QueryGetContractResponse) {
		option (google.api.http).get = "/liubaninc/m1/wasm/contract/{name}";
	}

	// Queries a list of contract items.
	rpc ContractAll(QueryAllContractRequest) returns (QueryAllContractResponse) {
		option (google.api.http).get = "/liubaninc/m1/wasm/contract";
	}

	// 合约预执行
	rpc PreExec(PreExecRequest) returns (PreExecResponse) {
		option (google.api.http) = {
			post : "/liubaninc/m1/wasm/preexec"
			body : "*"
		};
	}
}

// this line is used by starport scaffolding # 3
message QueryGetContractCodeRequest {
	string hash = 1;
}

message QueryGetContractCodeResponse {
	ContractCode ContractCode = 1;
}

message QueryAllContractCodeRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllContractCodeResponse {
	repeated ContractCode ContractCode = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetContractRequest {
	string name = 1;
}

message QueryGetContractResponse {
	Contract Contract = 1;
}

message QueryAllContractRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllContractResponse {
	repeated Contract Contract = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message PreExecRequest {
	repeated InvokeRequest requests = 1;
	string creator = 2;
	int64  lock = 3;
}

message PreExecResponse {
	InvokeResponse response = 3;
}